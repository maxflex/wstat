{"version":3,"sources":["app.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["$(document).ready ->\n  app = new Vue\n    el: '#app'\n    data:\n      addwords_error: false\n      list:\n        title: null\n        phrases: []\n      modal: {}\n    methods:\n      runModal: (action, title, placeholder = 'список слов или фраз', value = null) ->\n        @modal = value: value, action: action, title: title, placeholder: placeholder\n        showModal('main')\n\n      addWords: ->\n        new_phrases = []\n        @addwords_error = false\n        @modal.value.split('\\n').forEach (line, index) =>\n          return if @addwords_error # one error at a time\n          # skip empty lines\n          if line.trim().length\n            # parse tabs\n            parsed_line = line.split('\\t')\n            # error if more than N elements\n            return @addWordsError(index, line, 'некорректрое форматирование') if parsed_line.length > 3\n            [phrase, frequency, original] = parsed_line\n            ### PHRASE ###\n            # error if no original value\n            return @addWordsError(index, line, 'отсутствует основная фраза') if not phrase\n            [phrase, minus] = @separateMinuses(phrase)\n            list_item = {phrase: phrase, minus: minus, original: phrase}\n            ### FREQUENCY ###\n            if frequency\n              return @addWordsError(index, line, 'частота должна быть числом') if not $.isNumeric(frequency)\n              list_item.frequency = parseInt(frequency)\n            ### ORIGINAL ###\n            list_item.original = original if original\n            new_phrases.push(list_item)\n        return if @addwords_error\n        @list.phrases = @list.phrases.concat(new_phrases)\n        closeModal()\n\n      addWordsError: (index, line, message) ->\n        @addwords_error = true\n        notifyError(\"#{message}<br>строка #{index + 1}: <i>#{line}</i>\")\n        return false\n\n      # удалить дубликаты\n      uniq: (phrases = null) ->\n        new_phrases = _.uniq((phrases or @list.phrases), 'phrase')\n        if phrases\n          return new_phrases\n        else\n          @list.phrases = new_phrases\n\n      # разбить фразы на слова\n      splitPhrasesToWords: (phrases = null) ->\n        new_phrases = []\n        (phrases or @list.phrases).forEach (list_item) ->\n          list_item.phrase.split(' ').forEach (word) ->\n            word = word.trim()\n            if word.length\n              item = _.extend _.clone(list_item), {phrase: word}\n              delete item.id\n              new_phrases.push item\n        if phrases\n          return new_phrases\n        else\n          @list.phrases = new_phrases\n\n      separateMinuses: (phrase, minus = []) ->\n        minus = minus.split(' ') if not $.isArray(minus)\n        words = []\n        phrase.split(' ').forEach (value) ->\n          if value[0] is '-' and value.trim().length\n            minus.push(value)\n          else\n            words.push(value)\n        [words.join(' '), minus.join(' ')]\n"],"sourceRoot":"/source/"}